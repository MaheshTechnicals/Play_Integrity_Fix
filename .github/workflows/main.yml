name: Update PIF JSON on New Release

on:
  schedule:
    # Run this workflow every 6 hours to check for new releases (adjust as needed)
    - cron: '0 */6 * * *'

jobs:
  download_extract_upload:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out your repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Get the latest release from PlayIntegrityFix repository
    - name: Download latest PlayIntegrityFix release
      run: |
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/chiteroman/PlayIntegrityFix/releases/latest | jq -r '.assets[] | select(.name | endswith(".zip")).browser_download_url')
        curl -L "$LATEST_RELEASE" --output PlayIntegrityFix.zip

    # Step 3: Extract the zip file and get pif.json
    - name: Extract pif.json from the zip
      run: |
        unzip PlayIntegrityFix.zip
        if [ -f "pif.json" ]; then
          echo "pif.json found!"
        else
          echo "pif.json not found!" && exit 1
        fi

    # Step 4: Create a new release in your repository
    - name: Create new release with pif.json
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}  # Replace this with your custom secret
      with:
        tag_name: "pif-json-$(date +'%Y%m%d%H%M%S')"  # Unique tag for the release
        release_name: "pif.json update"
        body: "Automatically uploaded pif.json file from the latest PlayIntegrityFix release."
        draft: false
        prerelease: false

    # Step 5: Upload pif.json to the newly created release
    - name: Upload pif.json to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}  # Replace this with your custom secret
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pif.json
        asset_name: pif.json
        asset_content_type: application/json
