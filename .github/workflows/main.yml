name: Create Release

on:
  push:
    branches:
      - main  # You can change this to the branch you want to monitor

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get install jq

    - name: Get existing tags and create a new release if the tag does not exist
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      run: |
        # Step 1: Get existing tags
        EXISTING_TAGS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[].tag_name')

        if [ -z "$EXISTING_TAGS" ]; then
          echo "No existing tags found or an error occurred."
          exit 1
        else
          echo "Existing tags: $EXISTING_TAGS"
        fi

        # Step 2: Define the new tag
        NEW_TAG="v17.8"  # Update this as needed

        # Step 3: Check if the new tag exists
        if echo "$EXISTING_TAGS" | grep -q "$NEW_TAG"; then
          echo "Tag $NEW_TAG already exists. Exiting."
          exit 0
        else
          echo "Tag $NEW_TAG does not exist. Proceeding with the release."
        fi

        # Step 4: Create a new release
        RELEASE_RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d @- https://api.github.com/repos/${{ github.repository }}/releases <<EOF
        {
          "tag_name": "$NEW_TAG",
          "target_commitish": "main",  # You can change this to your branch or commit
          "name": "$NEW_TAG",
          "body": "pif.json update (Pixel 9 spoofing)",
          "draft": false,
          "prerelease": false
        }
        EOF
        )

        # Check if the release was created successfully
        if echo "$RELEASE_RESPONSE" | grep -q '"id"'; then
          echo "Release $NEW_TAG created successfully."
        else
          echo "Failed to create release $NEW_TAG."
          echo "Response: $RELEASE_RESPONSE"
          exit 1
        fi
